@use 'sass:map';

@use 'common/var' as *;
@use 'mixins/mixins' as *;
@use 'mixins/button' as *;

$button-icon-span-gap: () !default;
$button-icon-span-gap: map.merge(
    (
        'large': 8px,
        'default': 6px,
        'snall': 4px,
    ),
    $button-icon-span-gap
);

@include b('button') {
    @include set-component-css-var('button', $button);
}

@include b('button') {
    display: inline-flex;
    justify-content: center;
    align-items: center;

    line-height: 1;
    height: map.get($input-height, 'default');
    white-space: nowrap;
    cursor: pointer;
    color: getCssVar('button', 'text-color');
    text-align: center;
    box-sizing: border-box;
    outline: none;
    transition: 0.1s;
    font-weight: getCssVar('button', 'font-weight');
    user-select: none;
    vertical-align: middle;
    background-color: getCssVar('button', 'bg-color');
    border: getCssVar('border');
    border-color: getCssVar('button', 'border-color');

    &:hover {
        color: getCssVar('button', 'hover', 'text-color');
        border-color: getCssVar('button', 'hover', 'border-color');
        background-color: getCssVar('button', 'hover', 'bg-color');
        outline: none;
    }

    &:focus-visible {
        outline: 2px solid getCssVar('button', 'outline-color');
        outline-offset: 1px;
        transition: outline-offset 0s, outline 0s;
    }

    > span {
        display: inline-flex;
        align-items: center
    }

    & + & {
        margin-left: 12px;
    }

    & {
        @include button-size(
            map.get($button-padding-vertical, 'default') - $button-border-width,
            map.get($button-padding-horizontal, 'default') - $button-border-width,
            map.get($button-font-size, 'default'),
            map.get($button-border-radius, 'default')
        )
    }
}